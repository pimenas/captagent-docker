capture[collector] {

	# here we can check source/destination IP/port, message size
	if(msg_check("size", "10")) {

		# check if pkt is rtcp-xr
		if(is_rtcpxr()) {

		# if yes, parse the field and make a json output
		     if(parse_rtcpxr_to_json()) {
		 
			if(!send_hep("hepsocket")) {
			     clog("ERROR", "Error sending !!!!");
			}
 		     } else {
		       	    clog("ERROR", "couldn't parse RTCP-XR to json");
		     }
		} else {
			clog("ERROR", "This is not RTCP-RX");
		}
		
	    # Do parsing
	    if(parse_full_sip()) {

	    	#check if our methos is PUBLISH
	    	if(sip_is_method() && sip_check("method","PUBLISH")) {

	    	    # Currently we send reply automaticaly
	    	    # send_rtcpxr_reply("200", "OK");

	    	    # Can be defined many profiles in transport_hep.xml

	    	    if(!send_hep_proto("hepsocket", "99")) {
	    		clog("ERROR", "Error sending HEP!!!!");
	    	    }

	    	} else {
	    	    send_reply("503", "Server internal error");
	    	}
	    }
	}
	drop;
}
